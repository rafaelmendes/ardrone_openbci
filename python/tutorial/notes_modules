ABOUT MODULES

1) 
the global variable __name__ contains the name of the current script

2)
every time a script is run from shell, the global variable __name__ = main

3) if a module is imported, the module which imported is name __name__ = main. The imported file is __name__ = 'name of the imported file'

The list of all imported modules can be printed using:
dir()

4) using
if __name__ == "__main__":
	code here

the code part will only run if it is called from shell, which means __name__ = __main__

5) When a module is imported from a 'main' script, python searches for the module in the following locations and at the following order:
 - look for module name in built-in modules list
 - look for module name in the directory where the main script is at
 - look for module name in the directories specified in linux global variable PYTHONPATH, which can be setted from shell
 - look for module on python installation default directory

 A list of directories which will be searched can be printed using sys.path (after import sys). The list can be modified using:
 sys.path.append('directory path to be added')

 6)
 more about dir(): this function is used to print all the names defined by a module or script
 ex; dir(fibo) lists all the names created by fibo.py

 to list built-in functions : 
 import __builtin__ 
 dir(__builtin__)  